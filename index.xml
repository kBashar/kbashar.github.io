<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Musings of Life</title><link>https://kbashar.github.io/</link><description>Recent content on Musings of Life</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 02 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kbashar.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About redis</title><link>https://kbashar.github.io/posts/redis/</link><pubDate>Sat, 02 Sep 2023 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/redis/</guid><description>Redis is a key value store. Where the supported value type is numerus.
Redis supports a lot of Data structure, namely
String List Set Ordered Set</description></item><item><title>Getting started with Github Actions</title><link>https://kbashar.github.io/posts/git-action/</link><pubDate>Sat, 17 Dec 2022 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/git-action/</guid><description>Github Actions is a CI/CD platform. Full software development life cycle can be managed using github actions.
To understand this tool we will go through an example implementation. All releated concepts will be described along the way.
Project Goal Implement a github actions workflow that builds an exe from the project code and upload the exe file as a release artifact to the github repository. This workflow runs whenever the git repository owner push a new tag to the git repository.</description></item><item><title>git tag</title><link>https://kbashar.github.io/posts/git-tag/</link><pubDate>Thu, 24 Nov 2022 10:08:45 +0600</pubDate><guid>https://kbashar.github.io/posts/git-tag/</guid><description>git tag marks a specific commit in the source repository.
A common use case of the git tag is to denote software release versions by marking the points of commit history where the software was stable to release.
git tag command gives the list of all tags. git tag &amp;lt;tagname&amp;gt; creates a tag named tagname. This tag points to the commit that was the head of the repo at the time of the tag creation.</description></item><item><title>How * and + works in regex</title><link>https://kbashar.github.io/posts/regex-1/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/regex-1/</guid><description>+, * both are quantifiers. That is they don&amp;rsquo;t themselves match any pattern but check for repetition or presence of the pattern they are used after. One example will clear things up.
Assume, we want to match some numbers
9 90 234 2275258292335728520 To match numbers we can use character class [0-9] or \d, both work the same. but there is one problem, \d or [0-9] both matches number with one digit only.</description></item><item><title>Movie review: Requiem for a dream</title><link>https://kbashar.github.io/posts/requime-for-a-dream/</link><pubDate>Sun, 12 Aug 2018 20:12:20 +0600</pubDate><guid>https://kbashar.github.io/posts/requime-for-a-dream/</guid><description>‘Requiem for a dream’(2000), a movie adopted from a book of same title, is of Psychological drama genre primarily explores the pleasure driven compulsiveness of its four protagonists. Whenever we talk about addiction drug abuse comes to fore right away. That is such, for drug addiction has ostensive impact on its user as well as to other institutions related to its user. But more often than not we forget other addictive substances and pursuits prevalent in our day to day life.</description></item><item><title>Patch one: Recent files feature</title><link>https://kbashar.github.io/posts/gsoc-3/</link><pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/gsoc-3/</guid><description>Main code for this patch was ready for GSOC as I’ve coded it earlier for PDFReader of the PDFBox tools. So it was just about reuseing the RecentFiles class with PDFDebugger.
From this patch I’ve learnt an interesting thing. In RecentFiles class I’ve used Preference API of java to store application preference data. Preference API gives you one instance per Package.
PDFReader and PDFDebugger both are in same the package so they show the same recent files log.</description></item><item><title>Code has began</title><link>https://kbashar.github.io/posts/gsoc-2/</link><pubDate>Sun, 31 May 2015 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/gsoc-2/</guid><description>It has started after all. Summer has started as much awesomely as possible for me. Write code, get feedback, update and learn. What else you need if you love to code! One of the most anticipated event for me was participating in GSOC (Google Summer of Code) and after trying for two consecutive years I was at last selected this year. And I’m coding this year in Apache foundation and to be more precise in PDFBox.</description></item><item><title>My GSOC at PDFBox Apache Foundation</title><link>https://kbashar.github.io/posts/gsoc-1/</link><pubDate>Thu, 30 Apr 2015 00:00:00 +0000</pubDate><guid>https://kbashar.github.io/posts/gsoc-1/</guid><description>As a gsoc student I&amp;rsquo;m going to code to improve the PDFDebugger tool of the PDFBOX this summer. PDFBox is from the apache foundation.
PDFDebugger helps you to inspect the internal data in a structured and readable way which in turn paves a way to debug your PDF files. The PDFBOX already has a PDFDebugger which provides some fundamental facilities to user but lacks many more which are very useful for PDF detective works.</description></item></channel></rss>